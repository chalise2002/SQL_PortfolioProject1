SELECT * 
FROM [Project-Covid]..DEATH
WHERE CONTINENT IS NULL  AND LOCATION = 'WORLD'
ORDER BY 3,4

--SELECT * 
--FROM [Project-Covid]..VACCINATIONS
--ORDER BY 3,4

--SELECTING DATA THAT WE ARE USING
SELECT LOCATION,DATE,TOTAL_CASES, NEW_CASES, TOTAL_DEATHS, POPULATION
FROM [Project-Covid]..DEATH
ORDER BY 1,2

--LOOKING AT TOTAL CASES VS TOTAL DEATHS
--SHOWS THE LIKELYHOOD OF DYING IF YOU CONTRACTED COVID IN YOUR COUNTRY
SELECT LOCATION,DATE,TOTAL_CASES,TOTAL_DEATHS, (TOTAL_DEATHS/TOTAL_CASES)*100 AS DEATH_PERCENTAGE
FROM [Project-Covid]..DEATH
WHERE LOCATION LIKE '%NEPAL%'
ORDER BY 1,2

--LOOKING AT TOTAL CASES VS POPULATION
--GIVES THE PERCETANGE OF COVID CONTRACTION AGAINST THE POPULATION
SELECT LOCATION,DATE,TOTAL_CASES,POPULATION, (TOTAL_CASES/POPULATION)*100 AS COVID_PERCENTAGE
FROM [Project-Covid]..DEATH
WHERE LOCATION LIKE '%NEPAL%'
ORDER BY 1,2

--LOOKING AT THE COUNTRY WITH THE HIGHEST COVID CONTRACTION PERCENTAGE
SELECT LOCATION,POPULATION,MAX(TOTAL_CASES) AS HIGHEST_INFECTED, MAX((TOTAL_CASES/POPULATION)*100) AS COVID_PERCENTAGE
FROM [Project-Covid]..DEATH
GROUP BY LOCATION, POPULATION
ORDER BY 4 DESC

--LOOKING AT COUNTRIES WITH HIGHEST DEATH COUNT PER POPULTION
SELECT LOCATION,MAX(CAST(TOTAL_DEATHS AS INT)) AS HIGHEST_MORTALITY
FROM [Project-Covid]..DEATH
WHERE CONTINENT IS NOT NULL
GROUP BY LOCATION
ORDER BY 2 DESC

SELECT LOCATION,POPULATION,MAX(CAST(TOTAL_DEATHS AS INT)) AS HIGHEST_MORTALITY, MAX((TOTAL_DEATHS/POPULATION)*100) AS DEATH_PERCENTAGE
FROM [Project-Covid]..DEATH
GROUP BY LOCATION,POPULATION
ORDER BY 4 DESC

--LOOKING AT CONTINENT
SELECT CONTINENT,MAX(CAST(TOTAL_DEATHS AS INT)) AS HIGHEST_MORTALITY
FROM [Project-Covid]..DEATH
WHERE CONTINENT IS NOT NULL
GROUP BY CONTINENT
ORDER BY 2 DESC

SELECT DATE, SUM(NEW_CASES) AS TOTAL_CASES,SUM(CAST(NEW_DEATHS AS INT)) AS TOTAL_DEATHS, SUM(CAST(NEW_DEATHS AS INT))/SUM(NEW_CASES) * 100 AS DEATH_PERCENTAGE
FROM [Project-Covid]..DEATH
WHERE CONTINENT IS NOT NULL
GROUP BY DATE
ORDER BY 1,2


--LOOKING AT TOTAL POPULATION VS TOTAL VACCINATIONS
--USE CTE
WITH POPVSVAC(CONTINENT,LOCATION,DATE,POPULATION,NEW_VACCINATIONS,ROLLINGVACCINATED) 
AS
(
SELECT DEA.continent,DEA.LOCATION,DEA.DATE,DEA.POPULATION,VAC.NEW_VACCINATIONS , SUM(CONVERT(BIGINT,VAC.NEW_VACCINATIONS)) OVER (PARTITION BY DEA.LOCATION ORDER BY DEA.LOCATION,DEA.DATE) as ROLLINGVACCINATED
--,(ROLLINGVACCINATED/DEA.POPULATION)*100 AS
FROM [Project-Covid]..DEATH DEA
JOIN [Project-Covid]..VACCINATIONS VAC
ON DEA.LOCATION=VAC.LOCATION
AND DEA.DATE = VAC.DATE
WHERE DEA.continent IS NOT NULL
--ORDER BY 2,3
)
SELECT *,(ROLLINGVACCINATED/POPULATION) * 100
FROM POPVSVAC

--TEMP TABLE
DROP TABLE IF EXISTS #PERPOPULATION_VACCINATED
CREATE TABLE #PERPOPULATION_VACCINATED
(
CONTINENT VARCHAR(255),
LOCATION VARCHAR(255),
DATE DATETIME,
POPULATION NUMERIC,
NEW_VACCINATED NUMERIC,
ROLLINGVACCINATED NUMERIC
)

INSERT INTO #PERPOPULATION_VACCINATED
SELECT DEA.continent,DEA.LOCATION,DEA.DATE,DEA.POPULATION,VAC.NEW_VACCINATIONS , SUM(CONVERT(BIGINT,VAC.NEW_VACCINATIONS)) OVER (PARTITION BY DEA.LOCATION ORDER BY DEA.LOCATION,DEA.DATE) as ROLLINGVACCINATED
--,(ROLLINGVACCINATED/DEA.POPULATION)*100 AS
FROM [Project-Covid]..DEATH DEA
JOIN [Project-Covid]..VACCINATIONS VAC
ON DEA.LOCATION=VAC.LOCATION
AND DEA.DATE = VAC.DATE
WHERE DEA.continent IS NOT NULL
--ORDER BY 2,3

SELECT *
FROM #PERPOPULATION_VACCINATED

--CREATING VIEWS TO STORE DATA FOR VISUALIZATION
CREATE VIEW PERPOPULATION_VACCINATED AS
SELECT DEA.continent,DEA.LOCATION,DEA.DATE,DEA.POPULATION,VAC.NEW_VACCINATIONS , SUM(CONVERT(BIGINT,VAC.NEW_VACCINATIONS)) OVER (PARTITION BY DEA.LOCATION ORDER BY DEA.LOCATION,DEA.DATE) as ROLLINGVACCINATED
--,(ROLLINGVACCINATED/DEA.POPULATION)*100 AS
FROM [Project-Covid]..DEATH DEA
JOIN [Project-Covid]..VACCINATIONS VAC
ON DEA.LOCATION=VAC.LOCATION
AND DEA.DATE = VAC.DATE
WHERE DEA.continent IS NOT NULL
--ORDER BY 2,3
